---
AWSTemplateFormatVersion: '2010-09-09'
Description: MongoDB Atlas AWS CloudFormation Quickstart
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - AccessList
    - Label:
        default: Security Configuration
      Parameters:
      - PublicKey
      - PrivateKey 
      - OrgId
    - Label:
        default: MongoDB Atlas Configuration
      Parameters:
      - ProjectName
    ParameterLabels:
      ProjectName:
        default: atlas-cfn-quickstart
Parameters:
  PublicKey:
    Description: "Your MongoDB Cloud Public API Key"
    Type: String
    Default: "PublicKey"
  PrivateKey:
    Description: "Your MongoDB Cloud Private API Key"
    Type: String
    Default: "PrivateKey"
  OrgId:
    Description: "Your MongoDB Cloud Organization Id"
    Type: String
    Default: "OrgId"
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    Default: aws-quickstart
    Type: String
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
Resources:
  AtlasApiKeySecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub "${AWS::StackName}-ApiKey-Secret"
      Description: This secret has a hardcoded password in SecretString, how can i make this optional?
      #
      # { "PublicKey" : "xxx", "PrivateKey", "yyy", "OrgId": "zzz" }
      #
      SecretString: !Join ['', ['{"PublicKey":"', !Ref "PublicKey",'", "PrivateKey":"', !Ref "PrivateKey", '", "OrgId":"', !Ref "OrgId", '"}'] ]
      Tags:
      - Key: mongodb-atlas-quickstart-stack 
        Value: !Sub "${AWS::StackName}"
  AtlasIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: 'sts:AssumeRole'
  AtlasProject:
    Type: MongoDB::Atlas::Project
    DependsOn: AtlasIAMRole
    Properties:
      OrgId: !Ref "OrgId" 
      ApiKeys:
        PublicKey:  !Ref "PublicKey"
        PrivateKey: !Ref "PrivateKey"
      Name: !Sub "${AWS::StackName}"
  AtlasProjectIPAccessList:
    Type: MongoDB::Atlas::ProjectIpAccessList
    DependsOn: AtlasProject
    Properties:
      ProjectId: !Ref "AtlasProject"
      ApiKeys:
        PublicKey:  !Ref "PublicKey"
        PrivateKey: !Ref "PrivateKey"
      AccessList:
      - IPAddress: "0.0.0.0/1"
        Comment: "Testing open all ips"
      - CIDRBlock: "203.0.113.0/24"
        Comment: "CIDR block for Application Server B - D"
      #- AwsSecurityGroup: "sg-0026348ec11780bd1"
      #  Comment: "Access Listed AWS Security Group"
  AtlasDatabaseUser:
    Type: MongoDB::Atlas::DatabaseUser
    DependsOn: AtlasProject
    Properties:
      ApiKeys:
        PublicKey:  !Ref "PublicKey"
        PrivateKey: !Ref "PrivateKey"
      ProjectId: !Ref "AtlasProject"
      Username: !GetAtt "AtlasIAMRole.Arn"
      DatabaseName: "$external"
      AWSIAMType: "ROLE"
      Roles:
      - RoleName: "readWrite"
        DatabaseName: !Sub "${AWS::StackName}"
      Scopes:
      - Name: !Sub "${AWS::StackName}"
        Type: "CLUSTER"
Outputs:
  AtlasIAMRole:
    Description: "ARN for AWS IAM Role database cluster access"
    Value: !GetAtt "AtlasIAMRole.Arn"
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasIAMRoleARN" ] ]
  AtlasProject:
    Description: "Info on your Atlas deployment"
    Value: !Ref AtlasProject
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasProjectId" ] ]

